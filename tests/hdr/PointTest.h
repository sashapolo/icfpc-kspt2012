#ifndef POINTTEST_H
#define	POINTTEST_H

#include <cppunit/extensions/HelperMacros.h>

/**
 * Инкапсулирует тесты для класса Point.
 */
class PointTest : public CPPUNIT_NS::TestFixture {

    CPPUNIT_TEST_SUITE(PointTest);

    CPPUNIT_TEST(testPlus);
    CPPUNIT_TEST(testMinus);

    CPPUNIT_TEST_SUITE_END();

public:
    PointTest();
    virtual ~PointTest();
    void setUp();
    void tearDown();

private:

    /**
     * Метод агрегирует различные тесты оператора сложения.
     * В поисках детального описания методики тестирования смотрите документацию
     * к вспомогательным методам.
     */
    void testPlus();

    /**
     * Метод агрегирует различные тесты оператора вычитания.
     * В поисках детального описания методики тестирования смотрите документацию
     * к вспомогательным методам.
     */
    void testMinus();

    /**
     * Метод содержит тесты,
     * которые проверяют элементарную правильность выполнения операции сложения.
     * Тест проверяет правильность сложения точек для различных комбинаций
     * знаков их координат:
     * Первая точка                    Вторая точка
     * Обе координаты отрицательные    Обе координаты отрицательные
     * Обе координаты нулевые          Обе координаты нулевые
     * Обе координаты положительные    Обе координаты положительные
     */
    /*
     * ToDo: дополнить для остальных комбинаций?
     * Двумерная точка, три знака координат: 2^3 = 8 вариантов.
     * Оператор бинарный, нужно перебрать сочетания всех вариантов:
     * Насколько понимаю, это 8! вариантов.
     */
    void testPlusRightResults();

    /**
     * Метод содержит тесты,
     * которые проверяют элементарную правильность выполнения операции вычитания.
     * Тест проверяет правильность сложения точек для различных комбинаций
     * знаков их координат:
     * Первая точка                    Вторая точка
     * Обе координаты отрицательные    Обе координаты отрицательные
     * Обе координаты нулевые          Обе координаты нулевые
     * Обе координаты положительные    Обе координаты положительные
     */
    void testMinusRightResults();

    /**
     * Тест проверяет правильность сложения точек для случая,
     * когда обе координаты отрицательные.
     */
    void testPlusRightResultsNeg();

    /**
     * Тест проверяет правильность сложения точек для случая,
     * когда обе координаты нулевые.
     */
    void testPlusRightResultsZero();

    /**
     * Тест проверяет правильность сложения точек для случая,
     * когда обе координаты положительные.
     */
    void testPlusRightResultsPos();

    /**
     * Тест проверяет правильность вычитания точек для случая,
     * когда обе координаты отрицательные.
     */
    void testMinusRightResultsNeg();

    /**
     * Тест проверяет правильность вычитания точек для случая,
     * когда обе координаты нулевые.
     */
    void testMinusRightResultsZero();

    /**
     * Тест проверяет правильность вычитания точек для случая,
     * когда обе координаты положительные.
     */
    void testMinusRightResultsPos();
};

#endif	/* POINTTEST_H */
