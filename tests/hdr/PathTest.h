#ifndef PATHTEST_H
#define	PATHTEST_H

#include <cppunit/extensions/HelperMacros.h>

/**
 * Инкапсулирует тесты для класса Path.
 */
class PathTest : public CPPUNIT_NS::TestFixture {

    CPPUNIT_TEST_SUITE(PathTest);

// Uncomment when test will be refactored
//    CPPUNIT_TEST(testPath);

    CPPUNIT_TEST_SUITE_END();

public:
    PathTest();
    virtual ~PathTest();
    void setUp();
    void tearDown();

private:

    /**
     * Агрегирующий метод для тестирования класса Path.
     * Последовательно выполняет тестирование путей
     * по принципу: 1, 2, 3, много, очень много:
     * 1, 2        - граничные условия
     * 3           - предположение, что если заработает для трех, заработает и для большего числа
     * много       - тестирование для большого числа
     * очень много - грубая проверка того, что класс не загибается при больших объёмах данных.
     * 
     * В качестве значения для случая "очень много" выбрано значение 1 000 000,
     * как экстремальный вариант обхода змейкой карты 1 000 х 1 000.
     */
    // ToDo: добавить для нуля.
    void testPath();

    /**
     * Вспомогательный метод для тестирования пути из N точек.
     *
     * Проверяемые утверждения:
     * 1) При создании нового пути он пустой.
     * 2) После заполнения пути N элементами он не пустой.
     * 3) После заполнения размер пути равен заданному количеству точек.
     *
     * @param numOfPoints количество точек в тестируемом пути
     */
    void testNPointPath(int numOfPoints);

    /**
     * Вспомогательный метод,
     * который заполняет переданный путь заданным количеством точек.
     * <div style="font-weight: bold">Корректные значения количества точек: [1, INT_MAX]</div>
     * Добавляемые точки формируют зигзаг: вправо, вверх, вправо, вверх ...
     * Это сделано для того, чтобы в полученном пути изменялись обе координаты.
     * 
     * Ожидаемые предусловия:
     * path пустой
     * numOfPoints в диапазоне [1, INT_MAX]
     * 
     * @param path путь, к которому необходимо добавить точки
     * @param numOfPoints количество точек, которые нужно добавить
     */
    /*
     * ToDo: нужно уметь работать не только в случае, когда путь пустой.
     * Доклеивать зигзаг к последнему элементу?
     */
    void fillPathWithNPoints(Path &path, int numOfPoints);

    // ToDo: addCell(), then getCell()
};

#endif	/* PATHTEST_H */
